'==========================
' Build Comment – CASE 1 (C9 = No/blank) and CASE 2 (C9 = Yes)
'==========================
Private Const WOS_Texas As Double = 0.05   ' 5% charge multiplier (final step only)

' Public so it can be assigned to the button
Public Sub Build_Comment()
    Dim ws As Worksheet: Set ws = Me

    ' Always required
    Dim reqAlways As Variant
    reqAlways = Array("C4", "C5", "C7", "C9")
    Dim missing As String
    missing = MissingList(reqAlways)

    Dim c9 As String
    c9 = UCase$(Trim$(ws.Range("C9").Value2))

    ' === Branch required fields by C9 ===
    Dim reqCase As Variant
    If c9 = "YES" Then
        ' CASE 2 (shifted): require C10,C11,C14,C15,C16
        reqCase = Array("C10", "C11", "C14", "C15", "C16")
    Else
        ' CASE 1 (normal): require C12,C13,C14
        reqCase = Array("C12", "C13", "C14")
    End If
    missing = AppendMissing(missing, MissingList(reqCase))

    If Len(missing) > 0 Then
        MsgBox "Cannot build the comment. The following required cells are missing:" & vbCrLf & missing, _
               vbExclamation, "Build Comment"
        Exit Sub
    End If

    ' Refresh dynamic addresses/values so *_Ans_Val variables are correct
    UpdateAddress_DynamicVars
    UpdateValues_AllVars

    ' Pull common fields
    Dim sr As String:         sr = CStr(ws.Range("C4").Value2)
    Dim eff As String:        eff = CStr(ws.Range("C5").Value2)
    Dim namedIns As String:   namedIns = CStr(ws.Range("C7").Value2)

    Dim s As String
    Dim WaiverAmount As Double, WaiverAmount_Old As Double

    If c9 = "YES" Then
        ' ==========================
        ' CASE 2 (Include Job = Yes)
        ' ==========================
        Dim jobFrom As String: jobFrom = CStr(ws.Range("C10").Value2)
        Dim jobTo As String:   jobTo = CStr(ws.Range("C11").Value2)

        Dim cls2 As String:    cls2 = CStr(ws.Range("C14").Value2)            ' Class Code
        Dim rate2 As Double:   rate2 = CDbl(ws.Range("C15").Value2)           ' Class Code Rate
        Dim payroll2 As Double:payroll2 = CDbl(ws.Range("C16").Value2)        ' Estimated Payroll

        ' Base waiver amount
        WaiverAmount = payroll2 * rate2 / 100#
        WaiverAmount_Old = WaiverAmount

        ' Base string
        s = "SR# " & sr & " - " & _
            "Per Agent’s request, Added Specific Waiver of Subrogation with Effective Date: " & eff & _
            " for " & namedIns & " | " & _
            "Estimated Payroll: " & FmtCurrency0(payroll2) & ", Class Code: " & cls2 & _
            ", Class Code Rate: " & FmtDec3(rate2) & ", Job Duration: " & jobFrom & " to " & jobTo & " | " & _
            FmtInt(payroll2) & " x " & FmtDec3(rate2) & " / 100 = " & FmtDec3(WaiverAmount)

        ' Optional factors (shifted addresses)
        If IsNonBlank(ws.Range("C17")) Then
            WaiverAmount = WaiverAmount_Old * IncLimits_Ans_Val
            s = s & " x " & FmtDec3(IncLimits_Ans_Val) & " (Increased Limits) = " & FmtDec3(WaiverAmount)
            WaiverAmount_Old = WaiverAmount
        End If

        If IsNonBlank(ws.Range("C18")) Then
            WaiverAmount = WaiverAmount_Old * ExMod_Ans_Val
            s = s & " x " & FmtDec3(ExMod_Ans_Val) & " (Experience Mod) = " & FmtDec3(WaiverAmount)
            WaiverAmount_Old = WaiverAmount
        End If

        If IsNonBlank(ws.Range("C19")) Then
            WaiverAmount = WaiverAmount_Old * SchMod_Ans_Val
            s = s & " x " & FmtDec3(SchMod_Ans_Val) & " (Schedule Mod) = " & FmtDec3(WaiverAmount)
            WaiverAmount_Old = WaiverAmount
        End If

        If IsNonBlank(ws.Range("C20")) Then
            Dim pdRaw2 As Double
            pdRaw2 = Convert_Numeric_Double(ws.Range("C20").Value2, 0#) ' raw C20 for display
            WaiverAmount = WaiverAmount_Old * PremiumDisc_Ans_Val
            s = s & " x " & FmtDec3(PremiumDisc_Ans_Val) & _
                    " (Premium Discount: 1.00 - " & FmtDec3(pdRaw2) & " = " & FmtDec3(PremiumDisc_Ans_Val) & ") = " & FmtDec3(WaiverAmount)
            WaiverAmount_Old = WaiverAmount
        End If

        If IsNonBlank(ws.Range("C21")) Then
            WaiverAmount = WaiverAmount_Old * TierFactor_Ans_Val
            s = s & " x " & FmtDec3(TierFactor_Ans_Val) & " (Tier Factor) = " & FmtDec3(WaiverAmount)
            WaiverAmount_Old = WaiverAmount
        End If

    Else
        ' ==========================
        ' CASE 1 (Include Job = No/blank)
        ' ==========================
        Dim cls1 As String:    cls1 = CStr(ws.Range("C12").Value2)            ' Class Code
        Dim rate1 As Double:   rate1 = CDbl(ws.Range("C13").Value2)           ' Class Code Rate
        Dim payroll1 As Double:payroll1 = CDbl(ws.Range("C14").Value2)        ' Estimated Payroll

        ' Base waiver amount
        WaiverAmount = payroll1 * rate1 / 100#
        WaiverAmount_Old = WaiverAmount

        ' Base string
        s = "SR# " & sr & " - " & _
            "Per Agent’s request, Added Specific Waiver of Subrogation with Effective Date: " & eff & _
            " for " & namedIns & " | " & _
            "Estimated Payroll: " & FmtCurrency0(payroll1) & ", Class Code: " & cls1 & ", Class Code Rate: " & FmtDec3(rate1) & " | " & _
            FmtInt(payroll1) & " x " & FmtDec3(rate1) & " / 100 = " & FmtDec3(WaiverAmount)

        ' Optional factors (normal addresses)
        If IsNonBlank(ws.Range("C15")) Then
            WaiverAmount = WaiverAmount_Old * IncLimits_Ans_Val
            s = s & " x " & FmtDec3(IncLimits_Ans_Val) & " (Increased Limits) = " & FmtDec3(WaiverAmount)
            WaiverAmount_Old = WaiverAmount
        End If

        If IsNonBlank(ws.Range("C16")) Then
            WaiverAmount = WaiverAmount_Old * ExMod_Ans_Val
            s = s & " x " & FmtDec3(ExMod_Ans_Val) & " (Experience Mod) = " & FmtDec3(WaiverAmount)
            WaiverAmount_Old = WaiverAmount
        End If

        If IsNonBlank(ws.Range("C17")) Then
            WaiverAmount = WaiverAmount_Old * SchMod_Ans_Val
            s = s & " x " & FmtDec3(SchMod_Ans_Val) & " (Schedule Mod) = " & FmtDec3(WaiverAmount)
            WaiverAmount_Old = WaiverAmount
        End If

        If IsNonBlank(ws.Range("C18")) Then
            Dim pdRaw1 As Double
            pdRaw1 = Convert_Numeric_Double(ws.Range("C18").Value2, 0#) ' raw C18 for display
            WaiverAmount = WaiverAmount_Old * PremiumDisc_Ans_Val
            s = s & " x " & FmtDec3(PremiumDisc_Ans_Val) & _
                    " (Premium Discount: 1.00 - " & FmtDec3(pdRaw1) & " = " & FmtDec3(PremiumDisc_Ans_Val) & ") = " & FmtDec3(WaiverAmount)
            WaiverAmount_Old = WaiverAmount
        End If

        If IsNonBlank(ws.Range("C19")) Then
            WaiverAmount = WaiverAmount_Old * TierFactor_Ans_Val
            s = s & " x " & FmtDec3(TierFactor_Ans_Val) & " (Tier Factor) = " & FmtDec3(WaiverAmount)
            WaiverAmount_Old = WaiverAmount
        End If
    End If

    ' Final WOS step (multiply by 5%) — show integer result
    WaiverAmount = WaiverAmount_Old * WOS_Texas
    s = s & " x 5% (WOS Charge) = " & CStr(Application.WorksheetFunction.Round(WaiverAmount, 0))

    ' Copy to clipboard (MSForms.DataObject, late bound)
    CopyTextToClipboard s
End Sub

'==========================
' Helpers
'==========================
Private Function IsNonBlank(ByVal r As Range) As Boolean
    IsNonBlank = (Len(Trim$(CStr(r.Value2))) > 0)
End Function

Private Function MissingList(ByVal addrArr As Variant) As String
    Dim i As Long, a As String, out As String
    For i = LBound(addrArr) To UBound(addrArr)
        a = CStr(addrArr(i))
        If Len(Trim$(CStr(Me.Range(a).Value2))) = 0 Then
            out = out & IIf(Len(out) > 0, vbCrLf, vbNullString) & a
        End If
    Next i
    MissingList = out
End Function

Private Function AppendMissing(ByVal base As String, ByVal extra As String) As String
    If Len(extra) = 0 Then
        AppendMissing = base
    ElseIf Len(base) = 0 Then
        AppendMissing = extra
    Else
        AppendMissing = base & vbCrLf & extra
    End If
End Function

' Up to 3 decimals, no thousands, no trailing zeros (e.g., 855, 866.97, 1040.364)
Private Function FmtDec3(ByVal x As Double) As String
    Dim y As Double
    y = Application.WorksheetFunction.Round(x, 3)
    FmtDec3 = Format$(y, "0.###")
End Function

' Integer with thousands & $ (e.g., $75,000)
Private Function FmtCurrency0(ByVal x As Double) As String
    FmtCurrency0 = Format$(x, "$#,##0")
End Function

' Integer with no separators (e.g., 75000 for the math part)
Private Function FmtInt(ByVal x As Double) As String
    FmtInt = Format$(Application.WorksheetFunction.Round(x, 0), "0")
End Function

' Copy text to clipboard using MSForms (late bound; no reference needed)
Private Sub CopyTextToClipboard(ByVal txt As String)
    On Error Resume Next
    Dim o As Object
    Set o = CreateObject("MSForms.DataObject")
    o.SetText txt
    o.PutInClipboard
    Set o = Nothing
    On Error GoTo 0
End Sub

'==========================
' Installer: creates a rounded button across B2:C2 and wires the macro
'==========================
Public Sub Install_BuildComment_Button()
    Dim target As Range: Set target = Me.Range("B2:C2")
    Dim shp As Shape
    Const nm As String = "Build Comment"

    ' Remove existing with same name
    On Error Resume Next
    Me.Shapes(nm).Delete
    On Error GoTo 0

    ' Create the button
    Set shp = Me.Shapes.AddShape(Type:=msoShapeRoundedRectangle, _
                                 Left:=target.Left, Top:=target.Top, _
                                 Width:=target.Width, Height:=target.Height)
    With shp
        .Name = nm
        .TextFrame.Characters.Text = "Build Comment"
        .TextFrame.HorizontalAlignment = xlHAlignCenter
        .TextFrame.VerticalAlignment = xlVAlignCenter
        .Placement = xlMoveAndSize
        .ZOrder msoBringToFront
        .OnAction = "'" & ThisWorkbook.Name & "'!" & Me.CodeName & ".Build_Comment"
    End With
End Sub
